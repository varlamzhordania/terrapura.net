services:
  gunicorn:
    build:
      context: ./backend
    container_name: gunicorn
    command:
#      bash -c "python manage.py makemigrations --noinput && python manage.py migrate --noinput && gunicorn -c conf/gunicorn_conf.py core.wsgi:application"
      bash -c "python manage.py makemigrations --noinput && python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - ./backend:/home/terrapura
      - ./cert/:/home/terrapura/cert
    depends_on:
      - redis
      - memcached
      - postgres
    env_file:
      - ./docker.env
    expose:
      - 8000
    ports:
      - "8000:8000"
#  daphne:
#    build:
#      context: ./backend
#    container_name: daphne
#    command:
##      bash -c "daphne -b 0.0.0.0 -p 8001 core.asgi:application"
#      bash -c "daphne -u /var/run/django.sock -b 0.0.0.0 -p 8001 core.asgi:application"
#    volumes:
#      - ./backend:/home/terrapura
#      - ./cert/:/home/terrapura/cert
#    depends_on:
#      - redis
#      - memcached
#      - postgres
#      - gunicorn
#    env_file:
#      - ./docker.env
#    expose:
#      - 8001
#    ports:
#      - "8001:8001"
  celery:
    build:
      context: ./backend
    container_name: celery
    command: celery -A core worker --loglevel=info
    volumes:
      - ./backend:/home/terrapura
      - ./stream:/opt/data/hls
    depends_on:
      - redis
    env_file:
      - ./docker.env
#  nginx:
#    image: nginx:alpine
#    container_name: nginx
#    ports:
#      - "1935:1935"   # RTMP
##      - "8080:80"     # HLS playback
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ./cert/:/home/terrapura/cert
#      - ./backend/staticfiles:/home/terrapura/staticfiles
#      - ./backend/media:/home/terrapura/media
#    depends_on:
#      - gunicorn
#      - daphne
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
  memcached:
    image: memcached:alpine
    container_name: memcached
    ports:
      - "11211:11211"
  postgres:
    image: postgres:14
    container_name: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - docker.env
    environment:
      POSTGRES_DB: ${DB_NAME:-test}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-admin}


volumes:
  postgres_data:
